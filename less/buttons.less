//
// Buttons
// --------------------------------------------------

// Base styles   .btn和.btn.btn-bordered 的样式只有border和文案颜色不同
// --------------------------------------------------

.btn {
  display: inline-block;
  margin: 0; // For input.btn
  font-weight: @btn-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background: transparent;
  white-space: nowrap;
  color: @btn-default-color;
  border: 2px solid @btn-default-border;
  &.btn-bordered {
    color: #333;
    border: 2px solid #999;
  }
  .button-size(@padding-base-vertical; @padding-base-horizontal; @font-size-base; @line-height-base);
  .button-variant(@btn-default-hover-color; @btn-default-active-color);
  .user-select(none);
  //浅色border按钮
  outline: 0;

  &.disabled,
  &[disabled] {
    cursor: @cursor-disabled;
    pointer-events: none; // Future-proof disabling of clicks
    &, &:hover, &:focus, &.focus, &:active, &.active {
      color: #999;
      background-color: #e6e6e6;
      border-color: #e6e6e6;
    }
  }

  .badge {
    color: #fff;
    background-color: @btn-default-color;
  }
}


// Alternate buttons
// --------------------------------------------------

.btn-primary {
  color: @btn-primary-color;
  background: @btn-primary-bg;
  border-color: @btn-primary-bg;

  .button-variant-primary(@btn-primary-hover-bg; @btn-primary-active-bg);
  .badge {
    color: @btn-primary-bg;
    background-color: @btn-primary-color;
  }
}

//inverse btn 反色按钮，用于背景色是主色调（红）时
.btn-inverse {
  .opacity(0.9);
  .button-variant-inverse();
  &, &.btn-bordered {
    color: @btn-primary-color;
    background: @btn-primary-bg;
    border-color: @btn-primary-color;
  }
  &.btn-primary {
    color: @brand-primary;
    background: @btn-primary-color;
    border-color: @btn-primary-color;
  }
}


// Button Sizes
// --------------------------------------------------

.btn-xl {
  // line-height: ensure even-numbered height of button next to large input
  .button-size(@padding-xlarge-vertical; @padding-xlarge-horizontal; @font-size-xlarge; @line-height-xlarge);
}
.btn-lg {
  // line-height: ensure even-numbered height of button next to large input
  .button-size(@padding-large-vertical; @padding-large-horizontal; @font-size-large; @line-height-large);
}
.btn-sm {
  // line-height: ensure proper height of button next to small input
  .button-size(@padding-small-vertical; @padding-small-horizontal; @font-size-small; @line-height-small);
}
.btn-xs {
  .button-size(@padding-xs-vertical; @padding-xs-horizontal; @font-size-small; @line-height-small);
}


// Block button
// --------------------------------------------------

.btn-block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

// Checkbox and radio options
//
// In order to support the browser's form validation feedback, powered by the
// `required` attribute, we have to "hide" the inputs via `clip`. We cannot use
// `display: none;` or `visibility: hidden;` as that also hides the popover.
// Simply visually hiding the inputs via `opacity` would leave them clickable in
// certain cases which is prevented by using `clip` and `pointer-events`.
// This way, we ensure a DOM element is visible to position the popover from.
//
// See https://github.com/twbs/bootstrap/pull/12794 and
// https://github.com/twbs/bootstrap/pull/14559 for more information.

[data-toggle="buttons"] {
  > .btn {
    input[type="radio"],
    input[type="checkbox"] {
      position: absolute;
      clip: rect(0,0,0,0);
      pointer-events: none;
    }
  }
}
